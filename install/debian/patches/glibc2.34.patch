Description: Adjust startup code for glibc 2.34
 Based on the corresponding changes made in glibc:
 https://sourceware.org/git/?p=glibc.git;a=commit;h=035c012e32c11e84d64905efaf55e74f704d3668
Bug: https://gitlab.com/freepascal.org/fpc/source/-/issues/39295
Author: Graham Inggs <ginggs@debian.org>
Last-Update: 2022-08-12

--- a/fpcsrc/rtl/linux/powerpc64/cprt0.as
+++ b/fpcsrc/rtl/linux/powerpc64/cprt0.as
@@ -351,8 +351,8 @@
 start_addresses:
     .quad   0 /* was _SDA_BASE_  but not in 64-bit ABI*/
     .quad   main_stub
-    .quad   __libc_csu_init
-    .quad   __libc_csu_fini
+    .quad   0
+    .quad   0
     .size   start_adresses, .-start_addresses
 
 /*
--- a/fpcsrc/rtl/linux/powerpc64/gprt0.as
+++ b/fpcsrc/rtl/linux/powerpc64/gprt0.as
@@ -351,8 +351,8 @@
 start_addresses:
     .quad   0 /* was _SDA_BASE_  but not in 64-bit ABI*/
     .quad   main_stub
-    .quad   __libc_csu_init
-    .quad   __libc_csu_fini
+    .quad   0
+    .quad   0
     .size   start_adresses, .-start_addresses
 
 /*
--- a/fpcsrc/rtl/linux/aarch64/cprt0.as
+++ b/fpcsrc/rtl/linux/aarch64/cprt0.as
@@ -41,10 +41,8 @@
 	                     init, fini, rtld_fini, stack_end) */
 	adrp	x0,:got:PASCALMAIN
 	ldr	x0,[x0,#:got_lo12:PASCALMAIN]
-	adrp	x3,:got:__libc_csu_init
-	ldr	x3,[x3,#:got_lo12:__libc_csu_init]
-	adrp	x4,:got:__libc_csu_fini
-	ldr	x4,[x4,#:got_lo12:__libc_csu_fini]
+	mov	x3, #0
+	mov	x4, #0
 	bl	__libc_start_main
 
 	/* This should never happen */
--- a/fpcsrc/rtl/linux/x86_64/si_c.inc
+++ b/fpcsrc/rtl/linux/x86_64/si_c.inc
@@ -54,21 +54,21 @@ procedure _FPC_libc_haltproc(e:longint); forward;
 
 procedure ___libc_csu_init; external name '__libc_csu_init';
 
-{$if FPC_FULLVERSION>30202}
 procedure __libc_csu_init; public name '__libc_csu_init'; assembler;
   asm
+{$if FPC_FULLVERSION>30202}
     .weak __libc_csu_init
-  end;
 {$endif FPC_FULLVERSION>30202}
+  end;
 
 procedure ___libc_csu_fini; external name '__libc_csu_fini';
 
-{$if FPC_FULLVERSION>30202}
 procedure __libc_csu_fini; public name '__libc_csu_fini'; assembler;
   asm
+{$if FPC_FULLVERSION>30202}
     .weak __libc_csu_fini
-  end;
 {$endif FPC_FULLVERSION>30202}
+  end;
 
 procedure main_stub; assembler; nostackframe;
   asm
--- a/fpcsrc/rtl/linux/arm/cprt0.as
+++ b/fpcsrc/rtl/linux/arm/cprt0.as
@@ -82,10 +82,10 @@
 
         /* Set up the other arguments in registers */
         ldr a1, =PASCALMAIN
-        ldr a4, =_init
+        ldr a4, = #0
 
         /* Push fini */
-        str ip, [sp, #-4]!
+        str a4, [sp, #-4]!
 
         /* __libc_start_main (main, argc, argv, init, fini, rtld_fini, stack_end) */
 
--- a/fpcsrc/rtl/linux/powerpc/cprt0.as
+++ b/fpcsrc/rtl/linux/powerpc/cprt0.as
@@ -35,8 +35,8 @@
 start_addresses:
     .long     _SDA_BASE_
     .long     main_stub
-    .long     __libc_csu_init
-    .long     __libc_csu_fini
+    .long     0
+    .long     0
     .size   start_adresses, .-start_addresses
 
     .section ".text"
--- a/fpcsrc/rtl/linux/mips/cprt0.as
+++ b/fpcsrc/rtl/linux/mips/cprt0.as
@@ -151,10 +151,9 @@
         and $29, -2 * 4
         subu $29, 32
 
-        lw $7,%got(__libc_csu_init)($gp) /* init */
-        lw $8,%got(__libc_csu_fini)($gp) /* fini */
+        move $7, $0
 
-        sw $8, 16($29)				/* fini */
+        sw $0, 16($29)
         sw $2, 20($29)				/* rtld_fini */
         sw $29, 24($29)			/* stack_end */
 
--- a/fpcsrc/rtl/linux/m68k/cprt0.as
+++ b/fpcsrc/rtl/linux/m68k/cprt0.as
@@ -41,8 +41,10 @@
 
         pea      (%sp)         /* highest available stack address */
         pea      (%a1)         /* termination function provided by kernel */
-        pea      __libc_csu_fini
-        pea      __libc_csu_init
+
+        clr.l    -(%sp)
+        clr.l    -(%sp)
+
         pea      (%a0)         /* argv */
         move.l   %d0,-(%sp)    /* argc */
         pea      PASCALMAIN

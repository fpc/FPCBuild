#
# Example fpc.cfg for Free Pascal Compiler Version 1.0.8
#

# ----------------------
# Defines (preprocessor)
# ----------------------

#
# nested #IFNDEF, #IFDEF, #ENDIF, #ELSE, #DEFINE, #UNDEF are allowed
#
# -d is the same as #DEFINE
# -u is the same as #UNDEF
#

# When not m68k is defined at the commandline, define i386
#IFNDEF i386
  #DEFINE m68k
#ENDIF

#
# Some examples (for switches see below, and the -? helppages)
#
# Try compiling with the -dRELEASE or -dDEBUG on the commandline
#

# For a release compile with optimizes and strip debuginfo
#IFDEF RELEASE
  -Xs
  #WRITE Compiling Release Version
#ENDIF

# For a debug version compile with debuginfo and all codegeneration checks on
#IFDEF DEBUG
  -Crtoi
  #WRITE Compiling Debug Version
#ENDIF

# ----------------
# Parsing switches
# ----------------
# Semantic checking
#  -S2        switch some Delphi 2 extensions on
#  -Sc        supports operators like C (*=,+=,/= and -=)
#  -Sd        tries to be Delphi compatible
#  -Se<x>     compiler stops after the <x> errors (default is 1)
#  -Sg        allow LABEL and GOTO
#  -Sh        Use ansistrings
#  -Si        support C++ styled INLINE
#  -Sm        support macros like C (global)
#  -So        tries to be TP/BP 7.0 compatible
#  -Sp        tries to be gpc compatible
#  -Ss        constructor name must be init (destructor must be done)
#  -St        allow static keyword in objects
# Allow goto, inline, C-operators
-Sgic

# ---------------
# Code generation
# ---------------

# Uncomment the next line if you always want static/dynamic units by default
# (can be overruled with -CD, -CS at the commandline)
#-CS
#-CD

# Set the default heapsize to 8Mb
#-Ch8000000

# Set default codegeneration checks (iocheck, overflow, range, stack)
#-Ci
#-Co
#-Cr
-Ct


# -----------------------
# Set Filenames and Paths
# -----------------------

# Target is Amiga
-TAMIGA

# Both slashes and backslashes are allowed in paths

# path to the messagefile, not necessary anymore but can be used to override
# the default language

# path to the gcclib
#

# searchpath for includefiles
#-Fic:\pp/source/rtl/inc;c:\pp/source/rtl/i386

# searchpath for objectfiles
#-Foc:\pp/source/rtl/inc;c:\pp/source/rtl/i386

# searchpath for units and other system dependent things
-Fu../../units/$TARGET
-Fu../../units/$TARGET/*
-Fu../../units/$TARGET/rtl
-Fu../../units/$TARGET/amigaunits
-Fu../../units/$TARGET/utilunits
-Fu.

# searchpath for libraries
#-Flc:\pp/lib
#-Fl/lib;/usr/lib

# searchpath for tools
-FD/pp/bin/$TARGET

# -------------
# Linking
# -------------

# generate always debugging information for GDB (slows down the compiling
# process)
#-gl

# always pass an option to the linker
#-k-s

# Always strip debuginfo from the executable
-Xs


# -------------
# Miscellaneous
# -------------

# Write always a nice FPC logo ;)
-l

# Verbosity
# e : Show errors (default)       d : Show debug info
# w : Show warnings               u : Show used files
# n : Show notes                  t : Show tried files
# h : Show hints                  m : Show defined macros
# i : Show general info           p : Show compiled procedures
# l : Show linenumbers            c : Show conditionals
# a : Show everything             0 : Show nothing (except errors)

# Display Info, Warnings, Notes and Hints
-vw
# If you don't want so much verbosity use
#-vw

